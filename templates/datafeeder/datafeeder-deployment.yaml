{{- $webapp := .Values.georchestra.webapps.datafeeder -}}
{{- if and $webapp.enabled .Values.georchestra.webapps.datafeeder_frontend.enabled -}}
{{- $database := .Values.database -}}
{{- $database_secret_datafeeder_name := printf "%s-database-datafeeder-secret" (include "georchestra.fullname" .) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "georchestra.fullname" . }}-datafeeder
  labels:
    {{- include "georchestra.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ include "georchestra.fullname" . }}-datafeeder
spec:
  replicas: {{ $webapp.replicaCount }}
  selector:
    matchLabels:
      {{- include "georchestra.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ include "georchestra.fullname" . }}-datafeeder
  template:
    metadata:
      labels:
        {{- include "georchestra.selectorLabels" . | nindent 8 }}
        org.georchestra.service/name: {{ include "georchestra.fullname" . }}-datafeeder
        app.kubernetes.io/component: {{ include "georchestra.fullname" . }}-datafeeder
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
        {{- with .Values.georchestra.nodeSelector }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      initContainers:
      {{- include "georchestra.bootstrap_georchestra_datadir" . | nindent 6 }}
      {{- if $webapp.envsubst.enabled }}
      - name: envsubst
        image: georchestra/k8s-initcontainer-envsubst
        volumeMounts:
        - mountPath: /etc/georchestra
          name: georchestra-datadir
        env:
          - name: DEBUG
            value: "yes"
          - name: SUBST_FILES
            value: "/etc/georchestra/datafeeder/frontend-config.json /etc/georchestra/datafeeder/metadata_*"
          {{- include "georchestra.common-envs" . | nindent 10 }}
          {{- if $webapp.extra_environment }}
          {{- $webapp.extra_environment | toYaml | nindent 10 }}
          {{- end }}
      {{- end }}

      containers:
      - name: georchestra-datafeeder
        image: {{ $webapp.docker_image }}
        imagePullPolicy: Always
        env:
          - name: GEONETWORK_HOST
            value: "{{ include "georchestra.fullname" . }}-geonetwork-svc"
          - name: GEOSERVER_HOST
            value: "{{ include "georchestra.fullname" . }}-geoserver-svc"
          {{- include "georchestra.common-envs" . | nindent 10 }}
          {{- include "georchestra.database-georchestra-envs" . | nindent 10 }}
          {{ if $database.builtin }}
          - name: DF_PGHOST
            value: "{{ .Release.Name }}-database"
          - name: DF_PGDATABASE
            value: "datafeeder"
          {{ else }}
          {{ if $database.datafeeder.auth.existingSecret }}
          {{- $database_secret_datafeeder_name = $database.datafeeder.auth.existingSecret -}}
          {{ end }}
          - name: DF_PGHOST
            valueFrom:
              secretKeyRef:
                  name: {{ $database_secret_datafeeder_name }}
                  key: host
                  optional: false
          - name: DF_PGDATABASE
            valueFrom:
              secretKeyRef:
                  name: {{ $database_secret_datafeeder_name }}
                  key: dbname
                  optional: false
          {{ end }}
          - name: DF_PGPORT
            valueFrom:
              secretKeyRef:
                  name: {{ $database_secret_datafeeder_name }}
                  key: port
                  optional: false
          - name: DF_PGUSER
            valueFrom:
              secretKeyRef:
                  name: {{ $database_secret_datafeeder_name }}
                  key: user
                  optional: false
          - name: DF_PGPASSWORD
            valueFrom:
              secretKeyRef:
                  name: {{ $database_secret_datafeeder_name }}
                  key: password
                  optional: false
          {{- if $webapp.extra_environment }}
          {{- $webapp.extra_environment | toYaml | nindent 10 }}
          {{- end }}
        ports:
        - containerPort: 8080
          name: http-proxy
        volumeMounts:
          - mountPath: /etc/georchestra
            name: georchestra-datadir
        livenessProbe:
          tcpSocket:
            port: http-proxy
          periodSeconds: 10
          initialDelaySeconds: 20
      volumes:
      - name: georchestra-datadir
        emptyDir: {}
      {{- if .Values.georchestra.datadir.git.ssh_secret }}
      - name: ssh-secret
        secret:
          secretName: {{ .Values.georchestra.datadir.git.ssh_secret }}
          defaultMode: 0400
      {{- end }}
      {{- if $webapp.registry_secret }}
      imagePullSecrets:
      - name: {{ $webapp.registry_secret }}
      {{- end }}
      {{- if $webapp.tolerations }}
      tolerations:
        {{- $webapp.tolerations | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.hostAliases }}
      hostAliases:
        {{- .Values.hostAliases | toYaml | nindent 8 }}
      {{- end }}
{{- end }}
